{"version":3,"sources":["Pages/HomePage/homepage.styles.jsx","Components/menu-item/menu-item.styles.jsx","Components/menu-item/menu-item.component.jsx","Redux/directory/directory.selector.js","Components/directory/directory.styles.jsx","Components/directory/directory.component.jsx","Pages/HomePage/homepage.component.jsx"],"names":["HomePageContainer","styled","div","largeMenuItem","css","smallMenuItem","MenuItemContainer","props","console","log","size","BackgroundImage","img","imageUrl","ContentContainer","ContentTitle","h1","ContentSubtitle","span","withRouter","title","history","match","linkUrl","otherProps","onClick","push","url","className","toUpperCase","selectDirectorySection","createSelector","state","directory","sections","DirectoryMenu","mapStateToProps","createStructuredSelector","connect","map","id","otherSectionProps","key","HomePage"],"mappings":"wUAEO,IAAMA,EAAoBC,IAAOC,IAAV,K,klDCA9B,IAAMC,EAAgBC,YAAH,KACbC,EAAgBD,YAAH,KAWNE,EAAoBL,IAAOC,IAAV,IATJ,SAACK,GAEvB,OADAC,QAAQC,IAAIF,GACM,UAAfA,EAAMG,KACEP,EAGJE,IAkCEM,EAAkBV,IAAOW,IAAV,IACJ,gBAAEC,EAAF,EAAEA,SAAF,oBAAqBA,EAArB,OAOXC,EAAmBb,IAAOC,IAAV,KAahBa,EAAed,IAAOe,GAAV,KAOZC,EAAkBhB,IAAOiB,KAAV,K,QCrDbC,cAfE,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAAYC,EAAe,qDAEjE,OACI,kBAAClB,EAAD,iBAAuBkB,EAAvB,CAAmCC,QAAS,kBAAIJ,EAAQK,KAAR,UAAgBJ,EAAMK,KAAtB,OAA4BJ,OACxE,kBAACZ,EAAD,iBAAqBa,EAArB,CAAiCI,UAAU,sBAE3C,kBAACd,EAAD,CAAkBc,UAAU,WACxB,kBAACb,EAAD,KAAeK,EAAMS,eACrB,kBAACZ,EAAD,qB,gBCTHa,EAAyBC,YAClC,CAHoB,SAAAC,GAAK,OAAEA,EAAMC,YAKjC,SAAAA,GAAS,OAAEA,EAAUC,W,wKCLlB,IAAMC,EAAgBlC,IAAOC,IAAV,KCmBpBkC,EAAkBC,YAAyB,CAC/CH,SAASJ,IAGIQ,cAAQF,EAARE,CAlBG,SAAC,GAAc,IAAbJ,EAAY,EAAZA,SAElB,OACE,kBAACC,EAAD,KAGQD,EAASK,IAAI,YAA+B,IAA7BC,EAA4B,EAA5BA,GAAOC,EAAqB,sBACvC,OAAO,kBAAC,EAAD,eAAUC,IAAKF,GAAQC,SCA/BE,UAVE,WACb,OAEI,kBAAC3C,EAAD,KACI,kBAAC,EAAD","file":"static/js/7.8a773937.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const HomePageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 20px 80px;\n`;","import styled, {css} from 'styled-components';\n\nconst largeMenuItem = css`height: 380px;`;\nconst smallMenuItem = css`height: 240px;`;\n\nconst getMenuItemHeight = (props)=>{\n    console.log(props);\n    if(props.size === 'large'){\n        return largeMenuItem;\n    }\n\n    return smallMenuItem;\n}\n\nexport const MenuItemContainer = styled.div`\n    min-width: 30%;\n    ${getMenuItemHeight};\n    flex: 1 1 auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid black;\n    margin: 0 7.5px 15px;\n    overflow: hidden;\n    \n    &:hover{\n        cursor: pointer;\n    \n        & .background-image{\n          transform: scale(1.1);\n          transition: transform 6s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n        }\n    \n        & .content{\n          opacity: 0.9;\n        }\n      }\n      \n    }\n\n    @media screen and (max-width:800px){\n        height:200px;\n    }\n`;\n\nexport const BackgroundImage = styled.img`\n    background-image: ${({imageUrl})=>`url(${imageUrl})`};\n    width: 100%;\n    height: 100%;\n    background-position: center;\n    background-size: cover;\n`;\n\nexport const ContentContainer = styled.div`\n    height: 90px;\n    padding: 0 25px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid black;\n    background-color: white;\n    opacity: 0.7;\n    position: absolute;\n`;\n\nexport const ContentTitle = styled.h1`\n    font-weight: bold;\n    margin-bottom: 6px;\n    font-size: 22px;\n    color: #4a4a4a;\n`;\n\nexport const ContentSubtitle = styled.span`\n    font-weight: lighter;\n    font-size: 16px;\n`;","import React from 'react';\nimport {MenuItemContainer, BackgroundImage, \n    ContentContainer, ContentTitle, ContentSubtitle} from './menu-item.styles';\nimport {withRouter} from 'react-router-dom';\n\nconst MenuItem = ({title, history, match, linkUrl, ...otherProps})=> { \n    \n    return (\n        <MenuItemContainer {...otherProps} onClick={()=>history.push(`${match.url}${linkUrl}`)}>\n            <BackgroundImage {...otherProps} className='background-image'>\n            </BackgroundImage>\n            <ContentContainer className='content'>\n                <ContentTitle>{title.toUpperCase()}</ContentTitle>\n                <ContentSubtitle>SHOP NOW</ContentSubtitle>\n            </ContentContainer>\n        </MenuItemContainer>\n\n    );\n}\n\nexport default withRouter(MenuItem);","import {createSelector} from 'reselect';\n\nconst selectDirectory = state=>state.directory;\n\nexport const selectDirectorySection = createSelector(\n    [selectDirectory],\n\n    directory=>directory.sections\n);","import styled from 'styled-components';\n\nexport const DirectoryMenu = styled.div`\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`;","import React from 'react';\nimport MenuItem from '../menu-item/menu-item.component';\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {selectDirectorySection} from '../../Redux/directory/directory.selector';\nimport {DirectoryMenu} from './directory.styles';\n\nconst Directory = ({sections})=>{\n\n  return(\n    <DirectoryMenu>\n\n        {\n            sections.map(({id, ...otherSectionProps})=>{\n                return <MenuItem key={id} {...otherSectionProps}/>\n            })\n        }\n    </DirectoryMenu>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  sections:selectDirectorySection\n})\n\nexport default connect(mapStateToProps)(Directory);","import React from 'react';\nimport {HomePageContainer} from './homepage.styles';\nimport DirectoryMenu from '../../Components/directory/directory.component';\n\nconst HomePage = ()=>{\n    return (\n        \n        <HomePageContainer>\n            <DirectoryMenu />\n        </HomePageContainer>\n        \n    );\n}\n\nexport default HomePage;"],"sourceRoot":""}