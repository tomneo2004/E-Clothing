{"version":3,"sources":["Components/collection-preview/collection-preview.styles.jsx","Components/collection-preview/collection-preview.component.jsx","Components/collection-overview/collection-overview.styles.jsx","Components/collection-overview/collection-overview.component.jsx","Components/collection-overview/collection-overview-container.component.jsx","Redux/shop/shop.selector.js","Components/collection-item/collection-item.styles.jsx","Components/collection-item/collection-item.component.jsx"],"names":["CollectionPreviewContainer","styled","div","Title","Link","Preview","withRouter","title","items","match","to","path","toLowerCase","filter","item","index","map","key","id","CollectionOverviewContainer","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","otherProps","isLoading","selectIsCollectionFetching","compose","WithSpinner","CollectionOverview","selectShop","state","shop","selectShopCollections","createSelector","Object","keys","selectShopCollection","collectionUrlParam","isFetching","selectIsCollectionLoading","CollectionItemContainer","BackgroundImage","imageUrl","Button","CustomButton","FooterContainer","NameLabel","span","PriceLabel","dispatch","addItem","name","price","className","onClick","inverted"],"mappings":"41BAGO,IAAMA,EAA6BC,IAAOC,IAAV,KAU1BC,EAAQF,YAAOG,IAAPH,CAAH,KAMLI,EAAWJ,IAAOC,IAAX,K,QCELI,cAhBW,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAEtC,OACI,kBAACT,EAAD,KACI,kBAACG,EAAD,CAAOO,GAAE,UAAKD,EAAME,KAAX,YAAmBJ,EAAMK,gBAAkBL,GACpD,kBAACF,EAAD,KAEQG,EACCK,OAAO,SAACC,EAAKC,GAAN,OAAeA,EAAQ,IAC9BC,IAAI,SAACF,GAAD,OAAS,kBAAC,IAAD,CAAgBG,IAAKH,EAAKI,GAAIJ,KAAMA,U,wHCZ/D,IAAMK,EAA8BlB,IAAOC,IAAV,KCmBlCkB,EAAkBC,YAAyB,CAC7CC,YAAaC,MAGFC,cAAQJ,EAARI,CAlBY,SAAC,GAAiB,IAAhBF,EAAe,EAAfA,YACzB,OAEI,kBAACH,EAAD,KAEQG,EAAYN,IAAI,YAAwB,IAAtBE,EAAqB,EAArBA,GAAOO,EAAc,sBAEnC,OAAO,kBAAC,EAAD,eAAmBR,IAAKC,GAAQO,S,QCPrDL,EAAkBC,YAAyB,CAC7CK,UAAUC,MAGRR,EAA8BS,YAChCJ,YAAQJ,GACRS,IAFgCD,CAIlCE,GAEaX,a,gCCjBf,4IAIMY,EAAa,SAAAC,GAAK,OAAEA,EAAMC,MAEnBC,EAAwBC,YACjC,CAACJ,GAED,SAAAE,GAAI,OAAEA,EAAKX,cAGFC,EAA8BY,YACvC,CAACD,GACD,SAAAZ,GAAW,OAAIA,EAAac,OAAOC,KAAKf,GAAaN,IAAI,SAAAC,GAAG,OAAIK,EAAYL,KAAQ,KAG3EqB,EAAuB,SAAAC,GAEhC,OAAOJ,YACH,CAACD,GAED,SAAAZ,GAAW,OAAIA,EAAaA,EAAYiB,GAAsB,QAIzDZ,EAA6BQ,YACtC,CAACJ,GAED,SAAAE,GAAI,OAAEA,EAAKO,aAGFC,EAA4BN,YACrC,CAACJ,GAED,SAAAE,GAAI,OAAGA,EAAKX,e,4jDChCT,IAAMoB,EAA0BzC,IAAOC,IAAV,KA+BvByC,EAAkB1C,IAAOC,IAAV,IACJ,gBAAE0C,EAAF,EAAEA,SAAF,oBAAqBA,EAArB,OAQXC,EAAS5C,YAAO6C,IAAP7C,CAAH,KAeN8C,EAAkB9C,IAAOC,IAAV,KAQf8C,EAAY/C,IAAOgD,KAAV,KAKTC,EAAajD,IAAOgD,KAAV,K,gBC5CRzB,gBAAQ,KAJI,SAAC2B,GAAD,MAAa,CACpCC,QAAS,SAACtC,GAAD,OAAQqC,EAASC,YAAQtC,OAGvBU,CApBQ,SAAC,GAAmB,IAAlBV,EAAiB,EAAjBA,KAAMsC,EAAW,EAAXA,QAEpBC,EAAyBvC,EAAzBuC,KAAMT,EAAmB9B,EAAnB8B,SAAUU,EAASxC,EAATwC,MAEvB,OACI,kBAACZ,EAAD,KACI,kBAACC,EAAD,CAAiBC,SAAUA,IAC3B,kBAACG,EAAD,KACI,kBAACC,EAAD,KAAYK,GACZ,kBAACH,EAAD,gBAAiBI,KAErB,kBAACT,EAAD,CAAQU,UAAU,gBAAgBC,QAAS,kBAAIJ,EAAQtC,IAAO2C,UAAU,GAAO","file":"static/js/4.a3537a20.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\n\nexport const CollectionPreviewContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 0 10px 30px 10px;\n\n    @media screen and (max-width: 800px){\n        align-items: center;\n    }\n`;\n\nexport const Title = styled(Link)`\n    font-size: 40px;\n    margin-bottom: 25px;\n    text-align: center;\n`;\n\nexport const Preview  = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    @media screen and (max-width: 800px){\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        grid-gap: 15px;\n    }\n`;\n\n","import React from 'react';\nimport CollectionItem from '../collection-item/collection-item.component';\nimport {CollectionPreviewContainer, Title, Preview} from './collection-preview.styles';\nimport {withRouter} from 'react-router-dom';\n\nconst CollectionPreview = ({title, items, match})=>{\n\n    return (\n        <CollectionPreviewContainer>\n            <Title to={`${match.path}/${title.toLowerCase()}`}>{title}</Title>\n            <Preview>\n                {\n                    items\n                    .filter((item,index)=> index < 4)\n                    .map((item)=> <CollectionItem key={item.id} item={item} />)\n                }\n            </Preview>\n        </CollectionPreviewContainer>\n    );\n}\n\nexport default withRouter(CollectionPreview);","import styled from 'styled-components';\n\nexport const CollectionOverviewContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`;","import React from 'react';\nimport {createStructuredSelector} from 'reselect';\nimport {selectCollectionsForPreview} from '../../Redux/shop/shop.selector';\nimport CollectionPreview from '../collection-preview/collection-preview.component';\nimport {connect} from 'react-redux';\nimport {CollectionOverviewContainer} from './collection-overview.styles';\n\nconst CollectionOverview = ({collections})=>{\n    return (\n\n        <CollectionOverviewContainer>\n            {\n                collections.map(({id, ...otherProps})=>{\n\n                    return <CollectionPreview key={id} {...otherProps} />\n                })\n            }\n        </CollectionOverviewContainer>\n    );\n}\n\nconst mapStateToProps = createStructuredSelector({\n    collections: selectCollectionsForPreview\n})\n\nexport default connect(mapStateToProps)(CollectionOverview);","import {createStructuredSelector} from 'reselect';\nimport {selectIsCollectionFetching} from '../../Redux/shop/shop.selector';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport CollectionOverview  from './collection-overview.component';\nimport WithSpinner from '../with-spinner/with-spinner.component';\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading:selectIsCollectionFetching\n});\n\nconst CollectionOverviewContainer = compose(\n    connect(mapStateToProps),\n    WithSpinner\n\n)(CollectionOverview);\n\nexport default CollectionOverviewContainer;\n","import {createSelector} from 'reselect';\n\n\n\nconst selectShop = state=>state.shop;\n\nexport const selectShopCollections = createSelector(\n    [selectShop],\n\n    shop=>shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectShopCollections],\n    collections => collections? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectShopCollection = collectionUrlParam =>{\n\n    return createSelector(\n        [selectShopCollections],\n\n        collections => collections? collections[collectionUrlParam] : null\n    );\n}\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    \n    shop=>shop.isFetching\n);\n\nexport const selectIsCollectionLoading = createSelector(\n    [selectShop],\n\n    shop=>!shop.collections\n);","import styled from 'styled-components';\nimport CustomButton from '../custom-button/custom-button.component';\n\nexport const CollectionItemContainer = styled.div`\n    width: 22vw;\n    display: flex;\n    flex-direction: column;\n    height: 350px;\n    align-items: center;\n    position: relative;\n\n    &:hover{\n        cursor: pointer;\n        opacity: 0.8;\n\n        .custom-button{\n            opacity: 0.85;\n            display: flex;\n        }\n    }\n\n    @media screen and (max-width: 800px){\n        width: 40vw;\n\n        &:hover{\n            opacity: 0.8;\n    \n            .custom-button{\n                opacity: unset;\n            }\n        }\n    }\n`;\n\nexport const BackgroundImage = styled.div`\n    background-image: ${({imageUrl})=>`url(${imageUrl})`};\n    width: 100%;\n    height: 95%;\n    background-size: cover;\n    background-position: center;\n    margin-bottom: 5px;\n`;\n\nexport const Button = styled(CustomButton)`\n    position: absolute;\n    width: 80%;\n    opacity: 0.7;\n    top: 255px;\n    display: none;\n\n    @media screen and (max-width: 800px){\n        display: block;\n        opacity: 0.9;\n        min-width: unset;\n        padding: 0 10px;\n    }\n`;\n\nexport const FooterContainer = styled.div`\n    width: 100%;\n    height: 5%;\n    display: flex;\n    justify-content: space-between;\n    font-size: 18px;\n`;\n\nexport const NameLabel = styled.span`\n    width: 90%;\n    margin-bottom: 15px;\n`;\n\nexport const PriceLabel = styled.span`\n    width: 10%;\n`;\n","import React from 'react';\nimport {CollectionItemContainer, BackgroundImage, \n    Button, FooterContainer, NameLabel, PriceLabel} from './collection-item.styles';\n// import CustomButton from '../custom-button/custom-button.component';\nimport {connect} from 'react-redux';\nimport {addItem} from '../../Redux/cart/cart.actions';\n\nconst CollectionItem = ({item, addItem})=>{\n\n    const {name, imageUrl, price} = item;\n    \n    return (\n        <CollectionItemContainer>\n            <BackgroundImage imageUrl={imageUrl}></BackgroundImage>\n            <FooterContainer>\n                <NameLabel>{name}</NameLabel>\n                <PriceLabel>{`$${price}`}</PriceLabel>\n            </FooterContainer>\n            <Button className='custom-button' onClick={()=>addItem(item)} inverted={true}>{'Add to cart'}</Button>\n        </CollectionItemContainer>\n    );\n}\n\nconst mapDispatchToProps = (dispatch)=>({\n    addItem: (item)=>dispatch(addItem(item))\n})\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}