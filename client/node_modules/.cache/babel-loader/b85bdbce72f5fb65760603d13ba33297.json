{"ast":null,"code":"import _defineProperty from \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport CartActionTypes from './cart.types';\nconst initState = {\n  cartHidden: true\n};\n\nconst cartReducer = (state = initState, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        cartHidden: !state.cartHidden\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Redux/cart/cart.reducer.js"],"names":["CartActionTypes","initState","cartHidden","cartReducer","state","action","type","TOGGLE_CART_HIDDEN"],"mappings":";;;;;;AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE;AADE,CAAlB;;AAGA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,SAAT,EAAoBI,MAApB,KAA6B;AAE7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,eAAe,CAACO,kBAArB;AACI,+BAAWH,KAAX;AAAkBF,QAAAA,UAAU,EAAC,CAACE,KAAK,CAACF;AAApC;;AAEJ;AACI,aAAOE,KAAP;AALR;AAOH,CATD;;AAWA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types';\n\nconst initState = {\n    cartHidden: true\n}\nconst cartReducer = (state = initState, action)=>{\n\n    switch(action.type){\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\n            return {...state, cartHidden:!state.cartHidden};\n\n        default:\n            return state; \n    }\n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}