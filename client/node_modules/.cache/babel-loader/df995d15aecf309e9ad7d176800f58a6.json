{"ast":null,"code":"import _defineProperty from \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, itemToAdd) => {\n  const existingItem = cartItems.find(item => item.id === itemToAdd.id);\n\n  if (existingItem) {\n    return cartItems.map(item => {\n      return item.id === itemToAdd.id ? _objectSpread({}, item, {\n        quantity: item.quantity + 1\n      }) : item;\n    });\n  }\n\n  return [...cartItems, _objectSpread({}, itemToAdd, {\n    quantity: 1\n  })];\n};","map":{"version":3,"sources":["/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Redux/cart/cart.util.js"],"names":["addItemToCart","cartItems","itemToAdd","existingItem","find","item","id","map","quantity"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAAwB;AAEjD,QAAMC,YAAY,GAAGF,SAAS,CAACG,IAAV,CAAgBC,IAAD,IAASA,IAAI,CAACC,EAAL,KAAUJ,SAAS,CAACI,EAA5C,CAArB;;AAEA,MAAGH,YAAH,EAAgB;AAEZ,WAAOF,SAAS,CAACM,GAAV,CAAcF,IAAI,IAAE;AACvB,aAAOA,IAAI,CAACC,EAAL,KAAUJ,SAAS,CAACI,EAApB,qBAA2BD,IAA3B;AAAiCG,QAAAA,QAAQ,EAACH,IAAI,CAACG,QAAL,GAAc;AAAxD,WAA2DH,IAAlE;AACH,KAFM,CAAP;AAGH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,oBAAmBC,SAAnB;AAA8BM,IAAAA,QAAQ,EAAC;AAAvC,KAAP;AACH,CAZM","sourcesContent":["export const addItemToCart = (cartItems, itemToAdd)=>{\n\n    const existingItem = cartItems.find((item)=>(item.id===itemToAdd.id));\n\n    if(existingItem){\n\n        return cartItems.map(item=>{\n            return item.id===itemToAdd.id?{...item, quantity:item.quantity+1}:item\n        });\n    }\n\n    return [...cartItems, {...itemToAdd, quantity:1}];\n}"]},"metadata":{},"sourceType":"module"}