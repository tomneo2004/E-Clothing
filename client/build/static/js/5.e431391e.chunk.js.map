{"version":3,"sources":["Pages/CollectionPage/collectionpage.styles.jsx","Pages/CollectionPage/collectionpage.component.jsx","Pages/CollectionPage/collectionpage-container.component.jsx","Redux/shop/shop.selector.js","Components/collection-item/collection-item.styles.jsx","Components/collection-item/collection-item.component.jsx"],"names":["CollectionContainer","styled","div","Title","h2","ItemContainer","Item","CollectionItem","connect","state","ownProps","collection","selectShopCollection","match","params","collectionId","title","items","map","item","key","id","mapStateToProps","createStructuredSelector","isLoading","selectIsCollectionLoading","CollectionPageContainer","compose","WithSpinner","CollectionPage","selectShop","shop","selectShopCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","collectionUrlParam","selectIsCollectionFetching","isFetching","CollectionItemContainer","BackgroundImage","imageUrl","Button","CustomButton","FooterContainer","NameLabel","span","PriceLabel","dispatch","addItem","name","price","className","onClick","inverted"],"mappings":"krBAGO,IAAMA,EAAsBC,IAAOC,IAAV,KAKnBC,EAAQF,IAAOG,GAAV,KAKLC,EAAgBJ,IAAOC,IAAV,KAMbI,EAAOL,YAAOM,IAAPN,CAAH,KCSFO,cAJS,SAACC,EAAOC,GAAR,MAAqB,CACzCC,WAAYC,YAAqBF,EAASG,MAAMC,OAAOC,aAA3CH,CAAyDH,KAG1DD,CApBQ,SAAC,GAAgB,IAAfG,EAAc,EAAdA,WAEdK,EAAgBL,EAAhBK,MAAOC,EAASN,EAATM,MAEd,OACI,kBAACjB,EAAD,KACI,kBAACG,EAAD,KAAQa,GACR,kBAACX,EAAD,KAEQY,EAAMC,IAAI,SAAAC,GAAI,OAAE,kBAACb,EAAD,CAAMc,IAAKD,EAAKE,GAAIF,KAAMA,U,QCVxDG,EAAkBC,YAAyB,CAC7CC,UAAUC,MAGRC,EAA0BC,YAC5BnB,YAAQc,GACRM,IAF4BD,CAI9BE,GAEaH,a,gCCjBf,4IAIMI,EAAa,SAAArB,GAAK,OAAEA,EAAMsB,MAEnBC,EAAwBC,YACjC,CAACH,GAED,SAAAC,GAAI,OAAEA,EAAKG,cAGFC,EAA8BF,YACvC,CAACD,GACD,SAAAE,GAAW,OAAIA,EAAaE,OAAOC,KAAKH,GAAahB,IAAI,SAAAE,GAAG,OAAIc,EAAYd,KAAQ,KAG3ER,EAAuB,SAAA0B,GAEhC,OAAOL,YACH,CAACD,GAED,SAAAE,GAAW,OAAIA,EAAaA,EAAYI,GAAsB,QAIzDC,EAA6BN,YACtC,CAACH,GAED,SAAAC,GAAI,OAAEA,EAAKS,aAGFf,EAA4BQ,YACrC,CAACH,GAED,SAAAC,GAAI,OAAGA,EAAKG,e,4jDChCT,IAAMO,EAA0BxC,IAAOC,IAAV,KA+BvBwC,EAAkBzC,IAAOC,IAAV,IACJ,gBAAEyC,EAAF,EAAEA,SAAF,oBAAqBA,EAArB,OAQXC,EAAS3C,YAAO4C,IAAP5C,CAAH,KAeN6C,EAAkB7C,IAAOC,IAAV,KAQf6C,EAAY9C,IAAO+C,KAAV,KAKTC,EAAahD,IAAO+C,KAAV,K,gBC5CRxC,gBAAQ,KAJI,SAAC0C,GAAD,MAAa,CACpCC,QAAS,SAAChC,GAAD,OAAQ+B,EAASC,YAAQhC,OAGvBX,CApBQ,SAAC,GAAmB,IAAlBW,EAAiB,EAAjBA,KAAMgC,EAAW,EAAXA,QAEpBC,EAAyBjC,EAAzBiC,KAAMT,EAAmBxB,EAAnBwB,SAAUU,EAASlC,EAATkC,MAEvB,OACI,kBAACZ,EAAD,KACI,kBAACC,EAAD,CAAiBC,SAAUA,IAC3B,kBAACG,EAAD,KACI,kBAACC,EAAD,KAAYK,GACZ,kBAACH,EAAD,gBAAiBI,KAErB,kBAACT,EAAD,CAAQU,UAAU,gBAAgBC,QAAS,kBAAIJ,EAAQhC,IAAOqC,UAAU,GAAO","file":"static/js/5.e431391e.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport CollectionItem from '../../Components/collection-item/collection-item.component';\n\nexport const CollectionContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const Title = styled.h2`\n    font-size: 38px;\n    margin: 0 auto 30px;\n`;\n\nexport const ItemContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-gap: 10px;\n`;\n\nexport const Item = styled(CollectionItem)`\n    margin-bottom: 30px;\n`;","import React from 'react';\n\n// import CollectionItem from '../../Components/collection-item/collection-item.component';\nimport {connect} from 'react-redux';\nimport {selectShopCollection} from '../../Redux/shop/shop.selector';\n\nimport {CollectionContainer, Title, ItemContainer, Item} from './collectionpage.styles';\n\nconst CollectionPage = ({collection})=>{\n    \n    const {title, items} = collection;\n    \n    return (\n        <CollectionContainer>\n            <Title>{title}</Title>\n            <ItemContainer>\n                {\n                    items.map(item=><Item key={item.id} item={item} />)\n                }\n            </ItemContainer>\n        </CollectionContainer>\n    );\n}\n\nconst mapStateToProps = (state, ownProps) =>({\n    collection: selectShopCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","import {compose} from 'redux';\nimport {createStructuredSelector} from 'reselect';\nimport {selectIsCollectionLoading} from '../../Redux/shop/shop.selector';\nimport CollectionPage from './collectionpage.component';\nimport WithSpinner from '../../Components/with-spinner/with-spinner.component';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading:selectIsCollectionLoading\n});\n\nconst CollectionPageContainer = compose(\n    connect(mapStateToProps),\n    WithSpinner\n\n)(CollectionPage);\n\nexport default CollectionPageContainer;","import {createSelector} from 'reselect';\n\n\n\nconst selectShop = state=>state.shop;\n\nexport const selectShopCollections = createSelector(\n    [selectShop],\n\n    shop=>shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectShopCollections],\n    collections => collections? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectShopCollection = collectionUrlParam =>{\n\n    return createSelector(\n        [selectShopCollections],\n\n        collections => collections? collections[collectionUrlParam] : null\n    );\n}\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    \n    shop=>shop.isFetching\n);\n\nexport const selectIsCollectionLoading = createSelector(\n    [selectShop],\n\n    shop=>!shop.collections\n);","import styled from 'styled-components';\nimport CustomButton from '../custom-button/custom-button.component';\n\nexport const CollectionItemContainer = styled.div`\n    width: 22vw;\n    display: flex;\n    flex-direction: column;\n    height: 350px;\n    align-items: center;\n    position: relative;\n\n    &:hover{\n        cursor: pointer;\n        opacity: 0.8;\n\n        .custom-button{\n            opacity: 0.85;\n            display: flex;\n        }\n    }\n\n    @media screen and (max-width: 800px){\n        width: 40vw;\n\n        &:hover{\n            opacity: 0.8;\n    \n            .custom-button{\n                opacity: unset;\n            }\n        }\n    }\n`;\n\nexport const BackgroundImage = styled.div`\n    background-image: ${({imageUrl})=>`url(${imageUrl})`};\n    width: 100%;\n    height: 95%;\n    background-size: cover;\n    background-position: center;\n    margin-bottom: 5px;\n`;\n\nexport const Button = styled(CustomButton)`\n    position: absolute;\n    width: 80%;\n    opacity: 0.7;\n    top: 255px;\n    display: none;\n\n    @media screen and (max-width: 800px){\n        display: block;\n        opacity: 0.9;\n        min-width: unset;\n        padding: 0 10px;\n    }\n`;\n\nexport const FooterContainer = styled.div`\n    width: 100%;\n    height: 5%;\n    display: flex;\n    justify-content: space-between;\n    font-size: 18px;\n`;\n\nexport const NameLabel = styled.span`\n    width: 90%;\n    margin-bottom: 15px;\n`;\n\nexport const PriceLabel = styled.span`\n    width: 10%;\n`;\n","import React from 'react';\nimport {CollectionItemContainer, BackgroundImage, \n    Button, FooterContainer, NameLabel, PriceLabel} from './collection-item.styles';\n// import CustomButton from '../custom-button/custom-button.component';\nimport {connect} from 'react-redux';\nimport {addItem} from '../../Redux/cart/cart.actions';\n\nconst CollectionItem = ({item, addItem})=>{\n\n    const {name, imageUrl, price} = item;\n    \n    return (\n        <CollectionItemContainer>\n            <BackgroundImage imageUrl={imageUrl}></BackgroundImage>\n            <FooterContainer>\n                <NameLabel>{name}</NameLabel>\n                <PriceLabel>{`$${price}`}</PriceLabel>\n            </FooterContainer>\n            <Button className='custom-button' onClick={()=>addItem(item)} inverted={true}>{'Add to cart'}</Button>\n        </CollectionItemContainer>\n    );\n}\n\nconst mapDispatchToProps = (dispatch)=>({\n    addItem: (item)=>dispatch(addItem(item))\n})\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}