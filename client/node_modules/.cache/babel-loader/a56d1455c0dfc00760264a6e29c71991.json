{"ast":null,"code":"import _defineProperty from \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Components/sign-in/sign-in.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { SigninWithGoogle } from '../../firebase/firebase.utils';\nimport { GoogleSignInStart, EmailSignInStart } from '../../Redux/user/user.actions.js';\nimport { Auth } from '../../firebase/firebase.utils';\nimport { SignInContainer, Title, ButtonContainer } from './sign-instyles';\nimport { createStructuredSelector } from 'reselect';\nimport { SelectUserError } from '../../Redux/user/user.selector';\nimport { ErrorMsg } from './sign-up.styles';\n\nconst Signin = ({\n  googleSigninStart,\n  emailSigninStart,\n  userError\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    emailSigninStart(email, password); // try {\n    //     await Auth.signInWithEmailAndPassword(email, password);\n    //     this.setState({email:'', password:''});\n    // } catch (error) {\n    //     console.log('sign in with email and password error '+error);\n    // }\n  };\n\n  const handleChange = evt => {\n    const _evt$target = evt.target,\n          value = _evt$target.value,\n          name = _evt$target.name;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, 'I already have account'), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, 'Sign in with your email and password'), React.createElement(ErrorMsg, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, userError ? userError.message : null), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    handleChange: handleChange,\n    label: \"email\",\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    handleChange: handleChange,\n    label: \"password\",\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(ButtonContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSigninStart,\n    isGoogleSignin: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  userError: SelectUserError\n});\n\nconst mapDispatchToProps = dispatch => ({\n  googleSigninStart: () => dispatch(GoogleSignInStart()),\n  emailSigninStart: (email, password) => dispatch(EmailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);","map":{"version":3,"sources":["/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Components/sign-in/sign-in.component.jsx"],"names":["React","Component","useState","connect","FormInput","CustomButton","SigninWithGoogle","GoogleSignInStart","EmailSignInStart","Auth","SignInContainer","Title","ButtonContainer","createStructuredSelector","SelectUserError","ErrorMsg","Signin","googleSigninStart","emailSigninStart","userError","email","password","userCredentials","setUserCredentials","handleSubmit","evt","preventDefault","handleChange","target","value","name","message","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{Component, useState} from 'react';\nimport {connect} from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {SigninWithGoogle} from '../../firebase/firebase.utils';\nimport {GoogleSignInStart, EmailSignInStart} from '../../Redux/user/user.actions.js';\nimport {Auth} from '../../firebase/firebase.utils';\nimport {SignInContainer, Title, ButtonContainer} from './sign-instyles';\nimport {createStructuredSelector} from 'reselect';\nimport {SelectUserError} from '../../Redux/user/user.selector';\nimport {ErrorMsg} from './sign-up.styles';\n\nconst Signin = ({googleSigninStart, emailSigninStart, userError})=>{\n\n    const[userCredentials, setUserCredentials] = useState({\n        email:'',\n        password:''\n    });\n\n    const{email, password} = userCredentials;\n    const handleSubmit = async (evt)=>{\n\n        evt.preventDefault();\n\n        emailSigninStart(email, password);\n\n        // try {\n\n        //     await Auth.signInWithEmailAndPassword(email, password);\n        //     this.setState({email:'', password:''});\n            \n        // } catch (error) {\n            \n        //     console.log('sign in with email and password error '+error);\n        // }\n        \n    }\n\n    const handleChange = (evt)=>{\n\n        const {value , name} = evt.target;\n        setUserCredentials({...userCredentials, [name]:value});\n    }\n\n    return (\n\n        <SignInContainer>\n            <Title>{'I already have account'}</Title>\n            <span>{'Sign in with your email and password'}</span>\n            <ErrorMsg>{userError?userError.message:null}</ErrorMsg>\n            <form onSubmit={handleSubmit}>\n                <FormInput\n                handleChange={handleChange}\n                label='email' \n                type='email' name='email' value={email} required />\n\n                <FormInput\n                handleChange={handleChange}\n                label='password' \n                type='password' name='password' value={password} required />\n\n                <ButtonContainer>\n                    <CustomButton type='submit'>Sign in</CustomButton>\n                    <CustomButton type='button' \n                    onClick={googleSigninStart} \n                    isGoogleSignin>Sign in with Google</CustomButton>\n                </ButtonContainer>\n                \n            </form>\n        </SignInContainer>\n    );\n}\n\nconst mapStateToProps = createStructuredSelector({\n    userError: SelectUserError\n});\n\nconst mapDispatchToProps = (dispatch)=>({\n    googleSigninStart:()=>dispatch(GoogleSignInStart()),\n    emailSigninStart:(email, password)=>dispatch(EmailSignInStart({email, password}))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);"]},"metadata":{},"sourceType":"module"}