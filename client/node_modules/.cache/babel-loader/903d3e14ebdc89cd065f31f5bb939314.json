{"ast":null,"code":"var _jsxFileName = \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Pages/ShopPage/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport CollectionOverview from '../../Components/collection-overview/collection-overview.component';\nimport CollectionPage from '../CollectionPage/collectionpage.component';\nimport { Route } from 'react-router-dom';\nimport { Firestore, TransformCollectionsToMap } from '../../firebase/firebase.utils.js';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../Redux/shop/shop.actions';\nimport WithSpinner from '../../Components/with-spinner/with-spinner.component';\nconst SpinnerCollectionOverview = WithSpinner(CollectionOverview);\nconst SpinnerCollectionPage = WithSpinner(CollectionPage);\n\nclass Shop extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = Firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const transformedCollections = TransformCollectionsToMap(snapshot);\n      updateCollections(transformedCollections);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromSnapshot();\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(SpinnerCollectionOverview, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(SpinnerCollectionPage, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Pages/ShopPage/shop.component.jsx"],"names":["React","Component","CollectionOverview","CollectionPage","Route","Firestore","TransformCollectionsToMap","connect","updateCollections","WithSpinner","SpinnerCollectionOverview","SpinnerCollectionPage","Shop","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","transformedCollections","setState","componentWillUnmount","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,SAAR,EAAmBC,yBAAnB,QAAmD,kCAAnD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,yBAAyB,GAAGD,WAAW,CAACP,kBAAD,CAA7C;AACA,MAAMS,qBAAqB,GAAGF,WAAW,CAACN,cAAD,CAAzC;;AAEA,MAAMS,IAAN,SAAmBX,SAAnB,CAA4B;AAAA;AAAA;AAAA,SAExBY,KAFwB,GAEhB;AACJC,MAAAA,OAAO,EAAC;AADJ,KAFgB;AAAA,SAMxBC,uBANwB,GAME,IANF;AAAA;;AAQxBC,EAAAA,iBAAiB,GAAE;AAAA,UAERR,iBAFQ,GAEa,KAAKS,KAFlB,CAERT,iBAFQ;AAIf,UAAMU,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAkB;AAEtE,YAAMC,sBAAsB,GAAGhB,yBAAyB,CAACe,QAAD,CAAxD;AAEAb,MAAAA,iBAAiB,CAACc,sBAAD,CAAjB;AAEA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAC;AAAT,OAAd;AACH,KAP8B,CAA/B;AASH;;AAEDU,EAAAA,oBAAoB,GAAE;AAElB,SAAKT,uBAAL;AACH;;AAEDU,EAAAA,MAAM,GAAE;AAAA,UAEGC,KAFH,GAEY,KAAKT,KAFjB,CAEGS,KAFH;AAAA,UAGGZ,OAHH,GAGc,KAAKD,KAHnB,CAGGC,OAHH;AAIJ,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKY,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAGV,KAAD,IAAU,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKS,KAAK,CAACC,IAAX,mBAAjB;AAAkD,MAAA,MAAM,EAAGV,KAAD,IAAU,oBAAC,qBAAD;AAAuB,QAAA,SAAS,EAAEH;AAAlC,SAA+CG,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ;AAOH;;AAzCuB;;AA4C5B,MAAMW,kBAAkB,GAAIC,QAAD,KAAa;AACpCrB,EAAAA,iBAAiB,EAAEsB,cAAD,IAAkBD,QAAQ,CAACrB,iBAAiB,CAACsB,cAAD,CAAlB;AADR,CAAb,CAA3B;;AAIA,eAAevB,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkChB,IAAlC,CAAf","sourcesContent":["import React,{Component} from 'react';\nimport CollectionOverview from '../../Components/collection-overview/collection-overview.component';\nimport CollectionPage from '../CollectionPage/collectionpage.component';\nimport {Route} from 'react-router-dom';\nimport {Firestore, TransformCollectionsToMap} from '../../firebase/firebase.utils.js';\nimport {connect} from 'react-redux';\nimport {updateCollections} from '../../Redux/shop/shop.actions';\nimport WithSpinner from '../../Components/with-spinner/with-spinner.component';\n\nconst SpinnerCollectionOverview = WithSpinner(CollectionOverview);\nconst SpinnerCollectionPage = WithSpinner(CollectionPage);\n\nclass Shop extends Component{\n\n    state = {\n        loading:true\n    }\n    \n    unsubscribeFromSnapshot = null;\n\n    componentDidMount(){\n\n        const {updateCollections} = this.props;\n\n        const collectionRef = Firestore.collection('collections');\n\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async (snapshot)=>{\n\n            const transformedCollections = TransformCollectionsToMap(snapshot);\n\n            updateCollections(transformedCollections);\n\n            this.setState({loading:false});\n        });\n        \n    }\n\n    componentWillUnmount(){\n\n        this.unsubscribeFromSnapshot();\n    }\n\n    render(){\n\n        const {match} = this.props;\n        const {loading} = this.state;\n        return (\n\n            <div>\n                <Route exact path={`${match.path}`} render={(props)=>(<SpinnerCollectionOverview isLoading={loading} {...props} />)} />\n                <Route exact path={`${match.path}/:collectionId`} render={(props)=>(<SpinnerCollectionPage isLoading={loading} {...props} />)} />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>({\n    updateCollections:(collectionsMap)=>dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);"]},"metadata":{},"sourceType":"module"}