{"ast":null,"code":"import _defineProperty from \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, all, call, put } from 'redux-saga/effects';\nimport UserActionTypes from './user.action.type';\nimport { Auth, googleProvider, CreateUserProfile, getCurrentUser } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFail, SignOutSuccess, SignOutFail, SignupSuccess, SignupFail } from './user.actions';\n\nfunction* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(CreateUserProfile, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(SignInFail(error));\n  }\n}\n\nexport function* signinWithGoogle() {\n  try {\n    const _ref = yield Auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFail(error));\n  }\n}\nexport function* googleSigninStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signinWithGoogle);\n}\nexport function* signinWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield Auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFail(error));\n  }\n}\nexport function* emailSigninStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signinWithEmail);\n}\nexport function* onCheckUserSession() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFail(console.error));\n  }\n}\nexport function* checkUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, onCheckUserSession);\n}\nexport function* onSignout() {\n  try {\n    yield Auth.signOut();\n    yield put(SignOutSuccess());\n  } catch (error) {\n    yield put(SignOutFail(error));\n  }\n}\nexport function* userSignoutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, onSignout);\n}\nexport function* userSignup({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    yield console.log(displayName);\n\n    const _ref3 = yield Auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield CreateUserProfile(user, {\n      displayName\n    });\n    yield put(SignupSuccess());\n  } catch (error) {\n    yield put(SignupFail(error));\n  }\n}\nexport function* userSignupStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, userSignup);\n}\nexport function* userSaga() {\n  yield all([call(googleSigninStart), call(emailSigninStart), call(checkUserSession), call(userSignoutStart), call(userSignupStart)]);\n}","map":{"version":3,"sources":["/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Redux/user/user.saga.js"],"names":["takeLatest","all","call","put","UserActionTypes","Auth","googleProvider","CreateUserProfile","getCurrentUser","SignInSuccess","SignInFail","SignOutSuccess","SignOutFail","SignupSuccess","SignupFail","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signinWithGoogle","signInWithPopup","user","googleSigninStart","GOOGLE_SIGN_IN_START","signinWithEmail","payload","email","password","signInWithEmailAndPassword","emailSigninStart","EMAIL_SIGN_IN_START","onCheckUserSession","console","checkUserSession","CHECK_USER_SESSION","onSignout","signOut","userSignoutStart","SIGN_OUT_START","userSignup","displayName","log","createUserWithEmailAndPassword","userSignupStart","SIGN_UP_START","userSaga"],"mappings":"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","sourcesContent":["import {takeLatest, all, call, put} from 'redux-saga/effects';\nimport UserActionTypes from './user.action.type';\nimport {Auth, googleProvider, CreateUserProfile, getCurrentUser} from '../../firebase/firebase.utils';\nimport {SignInSuccess, SignInFail,\nSignOutSuccess, SignOutFail,\nSignupSuccess, SignupFail} from './user.actions';\n\nfunction* getSnapshotFromUserAuth(userAuth){\n\n    try{\n        const userRef = yield call(CreateUserProfile, userAuth);\n        const userSnapshot = yield userRef.get();\n\n        yield put(SignInSuccess({\n            id:userSnapshot.id,\n             ...userSnapshot.data()\n        }));\n    }\n    catch(error){\n        yield put(SignInFail(error));\n    }\n}\n\nexport function* signinWithGoogle(){\n\n    try{\n        const {user} = yield Auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    }\n    catch(error){\n        yield put(SignInFail(error));\n    }\n    \n}\n\nexport function* googleSigninStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,\n         signinWithGoogle);\n}\n\nexport function* signinWithEmail({payload:{email, password}}){\n    \n    try{\n        const {user} = yield Auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n    }\n    catch(error){\n        yield put(SignInFail(error));\n    }\n}\n\nexport function* emailSigninStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,\n         signinWithEmail);\n}\n\nexport function* onCheckUserSession(){\n    \n    try{\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    }\n    catch(error){\n        yield put(SignInFail(console.error));\n    }\n}\n\nexport function* checkUserSession(){\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, onCheckUserSession);\n}\n\nexport function* onSignout(){\n    \n    try {\n        yield Auth.signOut();\n        yield put(SignOutSuccess());\n\n    } catch (error) {\n        yield put(SignOutFail(error));\n    }\n}\n\nexport function* userSignoutStart(){\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, onSignout);\n}\n\nexport function* userSignup({payload:{displayName, email, password}}){\n    \n    try {\n        yield console.log(displayName);\n        const {user} = yield Auth.createUserWithEmailAndPassword(email, password);\n        yield CreateUserProfile(user, {displayName});\n\n        yield put(SignupSuccess());\n        \n    } catch (error) {\n        yield put(SignupFail(error));\n    }\n}\nexport function* userSignupStart(){\n    yield takeLatest(UserActionTypes.SIGN_UP_START, userSignup);\n}\n\nexport function* userSaga(){\n    yield all([\n        call(googleSigninStart), \n        call(emailSigninStart), \n        call(checkUserSession),\n        call(userSignoutStart),\n        call(userSignupStart)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}