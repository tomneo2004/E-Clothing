{"ast":null,"code":"import _defineProperty from \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, takeEvery, all, call, put } from 'redux-saga/effects';\nimport UserActionTypes from './user.action.type';\nimport { Auth, googleProvider, CreateUserProfile } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFail } from './user.actions';\n\nfunction* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(CreateUserProfile, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(SignInFail(error));\n  }\n}\n\nexport function* signinWithGoogle() {\n  try {\n    const _ref = yield Auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFail(error));\n  }\n}\nexport function* googleSigninStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signinWithGoogle);\n}\nexport function* signinWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield Auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFail(error));\n  }\n}\nexport function* emailSigninStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signinWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield console.log('check user session');\n}\nexport function* checkUserSession() {\n  yield takeEvery(UserActionTypes.CHECK_USER_SESSION, onCheckUserSession);\n}\nexport function* userSaga() {\n  yield all([call(googleSigninStart), call(emailSigninStart)]);\n}","map":{"version":3,"sources":["/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Redux/user/user.saga.js"],"names":["takeLatest","takeEvery","all","call","put","UserActionTypes","Auth","googleProvider","CreateUserProfile","SignInSuccess","SignInFail","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signinWithGoogle","signInWithPopup","user","googleSigninStart","GOOGLE_SIGN_IN_START","signinWithEmail","payload","email","password","signInWithEmailAndPassword","emailSigninStart","EMAIL_SIGN_IN_START","onCheckUserSession","console","log","checkUserSession","CHECK_USER_SESSION","userSaga"],"mappings":";;;;;;AAAA,SAAQA,UAAR,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoCC,IAApC,EAA0CC,GAA1C,QAAoD,oBAApD;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,iBAA9B,QAAsD,+BAAtD;AACA,SAAQC,aAAR,EAAuBC,UAAvB,QAAwC,gBAAxC;;AAEA,UAAUC,uBAAV,CAAkCC,QAAlC,EAA2C;AAEvC,MAAG;AACC,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACK,iBAAD,EAAoBI,QAApB,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMX,GAAG,CAACK,aAAa;AACnBO,MAAAA,EAAE,EAACF,YAAY,CAACE;AADG,OAEfF,YAAY,CAACG,IAAb,EAFe,EAAd,CAAT;AAIH,GARD,CASA,OAAMC,KAAN,EAAY;AACR,UAAMd,GAAG,CAACM,UAAU,CAACQ,KAAD,CAAX,CAAT;AACH;AACJ;;AAED,OAAO,UAAUC,gBAAV,GAA4B;AAE/B,MAAG;AAAA,iBACgB,MAAMb,IAAI,CAACc,eAAL,CAAqBb,cAArB,CADtB;AAAA,UACQc,IADR,QACQA,IADR;;AAEC,UAAMV,uBAAuB,CAACU,IAAD,CAA7B;AACH,GAHD,CAIA,OAAMH,KAAN,EAAY;AACR,UAAMd,GAAG,CAACM,UAAU,CAACQ,KAAD,CAAX,CAAT;AACH;AAEJ;AAED,OAAO,UAAUI,iBAAV,GAA6B;AAChC,QAAMtB,UAAU,CAACK,eAAe,CAACkB,oBAAjB,EACXJ,gBADW,CAAhB;AAEH;AAED,OAAO,UAAUK,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAT,CAA1B,EAAsD;AAEzD,MAAG;AAAA,kBACgB,MAAMrB,IAAI,CAACsB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADtB;AAAA,UACQN,IADR,SACQA,IADR;;AAEC,UAAMV,uBAAuB,CAACU,IAAD,CAA7B;AACH,GAHD,CAIA,OAAMH,KAAN,EAAY;AACR,UAAMd,GAAG,CAACM,UAAU,CAACQ,KAAD,CAAX,CAAT;AACH;AACJ;AAED,OAAO,UAAUW,gBAAV,GAA4B;AAC/B,QAAM7B,UAAU,CAACK,eAAe,CAACyB,mBAAjB,EACXN,eADW,CAAhB;AAEH;AAED,OAAO,UAAUO,kBAAV,GAA8B;AACjC,QAAMC,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAN;AACH;AAED,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,QAAMjC,SAAS,CAACI,eAAe,CAAC8B,kBAAjB,EAAqCJ,kBAArC,CAAf;AACH;AAED,OAAO,UAAUK,QAAV,GAAoB;AACvB,QAAMlC,GAAG,CAAC,CAACC,IAAI,CAACmB,iBAAD,CAAL,EAA0BnB,IAAI,CAAC0B,gBAAD,CAA9B,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest, takeEvery, all, call, put} from 'redux-saga/effects';\nimport UserActionTypes from './user.action.type';\nimport {Auth, googleProvider, CreateUserProfile} from '../../firebase/firebase.utils';\nimport {SignInSuccess, SignInFail} from './user.actions';\n\nfunction* getSnapshotFromUserAuth(userAuth){\n\n    try{\n        const userRef = yield call(CreateUserProfile, userAuth);\n        const userSnapshot = yield userRef.get();\n\n        yield put(SignInSuccess({\n            id:userSnapshot.id,\n             ...userSnapshot.data()\n        }));\n    }\n    catch(error){\n        yield put(SignInFail(error));\n    }\n}\n\nexport function* signinWithGoogle(){\n\n    try{\n        const {user} = yield Auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    }\n    catch(error){\n        yield put(SignInFail(error));\n    }\n    \n}\n\nexport function* googleSigninStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,\n         signinWithGoogle);\n}\n\nexport function* signinWithEmail({payload:{email, password}}){\n    \n    try{\n        const {user} = yield Auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n    }\n    catch(error){\n        yield put(SignInFail(error));\n    }\n}\n\nexport function* emailSigninStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,\n         signinWithEmail);\n}\n\nexport function* onCheckUserSession(){\n    yield console.log('check user session');\n}\n\nexport function* checkUserSession(){\n    yield takeEvery(UserActionTypes.CHECK_USER_SESSION, onCheckUserSession);\n}\n\nexport function* userSaga(){\n    yield all([call(googleSigninStart), call(emailSigninStart)]);\n}"]},"metadata":{},"sourceType":"module"}