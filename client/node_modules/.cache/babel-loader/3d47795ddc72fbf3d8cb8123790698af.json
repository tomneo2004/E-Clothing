{"ast":null,"code":"import _defineProperty from \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Components/sign-in/sign-in.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { SigninWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSigninStart } from '../../Redux/user/user.actions.js';\nimport { Auth } from '../../firebase/firebase.utils';\nimport { SignInContainer, Title, ButtonContainer } from './sign-instyles';\n\nconst Signin = ({\n  googleSigninStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    try {\n      await Auth.signInWithEmailAndPassword(email, password);\n      this.setState({\n        email: '',\n        password: ''\n      });\n    } catch (error) {\n      console.log('sign in with email and password error ' + error);\n    }\n  };\n\n  const handleChange = evt => {\n    const _evt$target = evt.target,\n          value = _evt$target.value,\n          name = _evt$target.name;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, 'I already have account'), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, 'Sign in with your email and password'), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    handleChange: handleChange,\n    label: \"email\",\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    handleChange: handleChange,\n    label: \"password\",\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(ButtonContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSigninStart,\n    isGoogleSignin: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSigninStart: () => dispatch(googleSigninStart())\n});\n\nexport default connect(null, mapDispatchToProps)(Signin);","map":{"version":3,"sources":["/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Components/sign-in/sign-in.component.jsx"],"names":["React","Component","useState","connect","FormInput","CustomButton","SigninWithGoogle","googleSigninStart","Auth","SignInContainer","Title","ButtonContainer","Signin","email","password","userCredentials","setUserCredentials","handleSubmit","evt","preventDefault","signInWithEmailAndPassword","setState","error","console","log","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{Component, useState} from 'react';\nimport {connect} from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {SigninWithGoogle} from '../../firebase/firebase.utils';\nimport {googleSigninStart} from '../../Redux/user/user.actions.js';\nimport {Auth} from '../../firebase/firebase.utils';\nimport {SignInContainer, Title, ButtonContainer} from './sign-instyles';\n\nconst Signin = ({googleSigninStart})=>{\n\n    const[userCredentials, setUserCredentials] = useState({\n        email:'',\n        password:''\n    });\n\n    const{email, password} = userCredentials;\n    const handleSubmit = async (evt)=>{\n\n        evt.preventDefault();\n\n        try {\n\n            await Auth.signInWithEmailAndPassword(email, password);\n            this.setState({email:'', password:''});\n            \n        } catch (error) {\n            \n            console.log('sign in with email and password error '+error);\n        }\n        \n    }\n\n    const handleChange = (evt)=>{\n\n        const {value , name} = evt.target;\n        setUserCredentials({...userCredentials, [name]:value});\n    }\n\n    return (\n\n        <SignInContainer>\n            <Title>{'I already have account'}</Title>\n            <span>{'Sign in with your email and password'}</span>\n            <form onSubmit={handleSubmit}>\n                <FormInput\n                handleChange={handleChange}\n                label='email' \n                type='email' name='email' value={email} required />\n\n                <FormInput\n                handleChange={handleChange}\n                label='password' \n                type='password' name='password' value={password} required />\n\n                <ButtonContainer>\n                    <CustomButton type='submit'>Sign in</CustomButton>\n                    <CustomButton type='button' \n                    onClick={googleSigninStart} \n                    isGoogleSignin>Sign in with Google</CustomButton>\n                </ButtonContainer>\n                \n            </form>\n        </SignInContainer>\n    );\n}\n\nconst mapDispatchToProps = (dispatch)=>({\n    googleSigninStart:()=>dispatch(googleSigninStart())\n});\n\nexport default connect(null, mapDispatchToProps)(Signin);"]},"metadata":{},"sourceType":"module"}