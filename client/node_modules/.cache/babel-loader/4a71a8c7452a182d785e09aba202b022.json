{"ast":null,"code":"import _defineProperty from \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase, { firestore } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FB_API_KEY,\n  authDomain: process.env.REACT_APP_FB_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FB_DATABASE_URL,\n  projectId: process.env.REACT_APP_FB_PROJECT_ID,\n  storageBucket: \"\",\n  messagingSenderId: process.env.REACT_APP_FB_MSG_SENDER_ID,\n  appId: process.env.REACT_APP_FB_APP_ID\n};\nfirebase.initializeApp(firebaseConfig);\nexport const Auth = firebase.auth();\nexport const Firestore = firebase.firestore();\nexport const CreateUserProfile = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = Firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const email = userAuth.email,\n          displayName = userAuth.displayName;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        email,\n        displayName,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('create user profile error ' + error);\n    }\n  }\n\n  return userRef;\n};\nexport const AddCollectionToDocument = async (collectionKey, collectionToAdded) => {\n  const collectionRef = Firestore.collection(collectionKey);\n  const batch = Firestore.batch();\n  collectionToAdded.forEach(obj => {\n    const collectionDoc = collectionRef.doc();\n    batch.set(collectionDoc, obj);\n  });\n  return await batch.commit();\n};\nexport const TransformCollectionsToMap = collections => {\n  return collections.map(doc => {\n    const title = doc.title,\n          items = doc.items;\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n};\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const SigninWithGoogle = () => Auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/firebase/firebase.utils.js"],"names":["firebase","firestore","firebaseConfig","apiKey","process","env","REACT_APP_FB_API_KEY","authDomain","REACT_APP_FB_AUTH_DOMAIN","databaseURL","REACT_APP_FB_DATABASE_URL","projectId","REACT_APP_FB_PROJECT_ID","storageBucket","messagingSenderId","REACT_APP_FB_MSG_SENDER_ID","appId","REACT_APP_FB_APP_ID","initializeApp","Auth","auth","Firestore","CreateUserProfile","userAuth","additionalData","userRef","doc","uid","snapshot","get","exists","email","displayName","createdAt","Date","set","error","console","log","AddCollectionToDocument","collectionKey","collectionToAdded","collectionRef","collection","batch","forEach","obj","collectionDoc","commit","TransformCollectionsToMap","collections","map","title","items","routeName","encodeURI","toLowerCase","id","provider","GoogleAuthProvider","setCustomParameters","prompt","SigninWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase, { firestore } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FB_API_KEY,\n    authDomain: process.env.REACT_APP_FB_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FB_DATABASE_URL,\n    projectId: process.env.REACT_APP_FB_PROJECT_ID,\n    storageBucket: \"\",\n    messagingSenderId: process.env.REACT_APP_FB_MSG_SENDER_ID,\n    appId: process.env.REACT_APP_FB_APP_ID\n  };\n \n  firebase.initializeApp(firebaseConfig);\n\n  export const Auth = firebase.auth();\n  export const Firestore = firebase.firestore();\n\n  export const CreateUserProfile = async (userAuth, additionalData)=>{\n\n    if(!userAuth)\n        return;\n    \n    const userRef = Firestore.doc(`users/${userAuth.uid}`);\n    const snapshot = await userRef.get();\n\n    if(!snapshot.exists){\n\n        const{email, displayName} = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                email,\n                displayName,\n                createdAt,\n                ...additionalData\n            });\n        } catch (error) {\n            \n            console.log('create user profile error '+error);\n        }\n    }\n\n    return userRef;\n  }\n\n  export const AddCollectionToDocument = async (collectionKey, collectionToAdded)=>{\n\n    const collectionRef = Firestore.collection(collectionKey);\n    \n    const batch = Firestore.batch();\n\n    collectionToAdded.forEach(obj => {\n        const collectionDoc = collectionRef.doc();\n        batch.set(collectionDoc, obj);\n    });\n\n    return await batch.commit();\n  }\n\n  export const TransformCollectionsToMap = (collections)=>{\n\n    return collections.map((doc)=>{\n\n        const {title, items} = doc;\n\n        return{\n            routeName: encodeURI(title.toLowerCase()),\n            id: doc.id,\n            title,\n            items\n        }\n    });\n  }\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n  provider.setCustomParameters({prompt:'select_account'});\n  export const SigninWithGoogle = ()=>Auth.signInWithPopup(provider);\n\n  export default firebase;"]},"metadata":{},"sourceType":"module"}