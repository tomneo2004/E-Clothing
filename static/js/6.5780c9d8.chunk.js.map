{"version":3,"sources":["Components/checkout-item/checkout-item.styles.jsx","Components/checkout-item/checkout-item.component.jsx","Components/stripe-checkout-button/stripe-checkout-button.styles.jsx","Components/stripe-checkout-button/stripe-checkout-button.component.jsx","Pages/CheckoutPage/checkoutpage.styles.jsx","Pages/CheckoutPage/checkoutpage.component.jsx"],"names":["labelWidthStyle","css","CheckoutItemContainer","styled","div","ImageContainer","NameLable","span","QuantityLabel","PriceLabel","RemoveButton","connect","dispatch","clearItem","item","addItem","removeItem","cartItem","name","imageUrl","price","quantity","src","alt","className","onClick","CheckoutButton","StripeCheckout","StripeCheckoutButton","stripePrice","label","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","then","res","alert","catch","error","console","log","JSON","parse","stripeKey","CheckoutConatiner","CheckoutHeader","HeaderBlock","Total","Warning","mapStateToProps","createStructuredSelector","cartItems","SelectCartItems","total","SelectCartTotal","map","key","id"],"mappings":"6pCAEA,IAAMA,EAAkBC,YAAH,KAIRC,EAAwBC,IAAOC,IAAV,KAUrBC,EAAiBF,IAAOC,IAAV,IACrBJ,GASOM,EAAYH,IAAOI,KAAV,IAChBP,GAIOQ,EAAgBL,IAAOI,KAAV,IACpBP,GAYOS,EAAaN,IAAOI,KAAV,IACjBP,GAGOU,EAAeP,IAAOI,KAAV,KCbVI,cAAQ,KANI,SAACC,GAAD,MAAa,CACpCC,UAAU,SAACC,GAAD,OAAQF,EAASC,YAAUC,KACrCC,QAAQ,SAACD,GAAD,OAAQF,EAASG,YAAQD,KACjCE,WAAW,SAACF,GAAD,OAAQF,EAASI,YAAWF,OAG5BH,CA5BM,SAAC,GAA8C,IAA7CM,EAA4C,EAA5CA,SAAUJ,EAAkC,EAAlCA,UAAWE,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAE1CE,EAAmCD,EAAnCC,KAAMC,EAA6BF,EAA7BE,SAAUC,EAAmBH,EAAnBG,MAAOC,EAAYJ,EAAZI,SAC9B,OAEI,kBAACnB,EAAD,KACI,kBAACG,EAAD,KACI,yBAAKiB,IAAG,UAAKH,GAAYI,IAAI,UAEjC,kBAACjB,EAAD,KAAYY,GACZ,kBAACV,EAAD,KACI,yBAAKgB,UAAU,QAAQC,QAAS,kBAAIT,EAAWC,KAA/C,UACA,0BAAMO,UAAU,SAASH,GACzB,yBAAKG,UAAU,QAAQC,QAAS,kBAAIV,EAAQE,KAA5C,WAEJ,kBAACR,EAAD,KAAaW,GACb,kBAACV,EAAD,CACAe,QAAS,kBAAIZ,EAAUI,KADvB,a,wKCpBL,IAAMS,EAAiBvB,YAAOwB,IAAPxB,CAAH,K,kBCwCZyB,EAtCc,SAAC,GAAW,IAAVR,EAAS,EAATA,MACrBS,EAAsB,IAART,EAqBpB,OACI,kBAACM,EAAD,CACII,MAAM,UACNZ,KAAK,aACLa,gBAAc,EACdC,iBAAe,EACfC,MAAM,sCACNC,YAAW,wBAAmBd,GAC9Be,OAAQN,EACRO,WAAW,UACXC,MA5BQ,SAAAA,GACZC,IAAM,CACFC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACFN,OAAQN,EACRQ,MAAOA,KAGdK,KAAK,SAAAC,GACFC,MAAM,wBAETC,MAAM,SAAAC,GACHC,QAAQC,IAAI,kBAAkBC,KAAKC,MAAMJ,OACzCF,MAAM,0CAeNO,UA/Be,gD,w6BCJpB,IAAMC,EAAoBjD,IAAOC,IAAV,KASjBiD,EAAiBlD,IAAOC,IAAV,KASdkD,EAAcnD,IAAOC,IAAV,KASXmD,EAAQpD,IAAOC,IAAV,KAMLoD,EAAUrD,IAAOC,IAAV,KCSdqD,EAAkBC,YAAyB,CAC7CC,UAAUC,IACVC,MAAMC,MAGKnD,sBAAQ8C,EAAR9C,CAxCM,SAAC,GAAsB,IAArBgD,EAAoB,EAApBA,UAAWE,EAAS,EAATA,MAE9B,OACI,kBAACT,EAAD,KACI,kBAACC,EAAD,KACI,kBAACC,EAAD,KACI,0CAEJ,kBAACA,EAAD,KACI,8CAEJ,kBAACA,EAAD,KACI,2CAEJ,kBAACA,EAAD,KACI,wCAEJ,kBAACA,EAAD,KACI,0CAIJK,EAAUI,IAAI,SAAAjD,GAAI,OAAG,kBAAC,EAAD,CAAckD,IAAKlD,EAAKmD,GAAIhD,SAAUH,MAE/D,kBAACyC,EAAD,2BAAuBM,IACvB,kBAACL,EAAD,sDAEI,6BAFJ,4CAKA,kBAAC,EAAD,CAAsBpC,MAAOyC","file":"static/js/6.5780c9d8.chunk.js","sourcesContent":["import styled, {css} from 'styled-components';\n\nconst labelWidthStyle = css`\n    width: 23%;\n`;\n\nexport const CheckoutItemContainer = styled.div`\n    width: 100%;\n    display: flex;\n    min-height: 100px;\n    border-bottom: 1px solid darkgrey;\n    padding: 15px 0;\n    font-size: 20px;\n    align-items: center;\n`;\n\nexport const ImageContainer = styled.div`\n    ${labelWidthStyle}\n    padding-right: 15px;\n\n    img {\n        width: 100%;\n        height: 100%;\n    }\n`;\n\nexport const NameLable = styled.span`\n    ${labelWidthStyle}\n\n`;\n\nexport const QuantityLabel = styled.span`\n    ${labelWidthStyle}\n    display: flex;\n\n    .arrow{\n        cursor: pointer;\n    }\n\n    .value{\n        padding:0 20px;\n    }\n`;\n\nexport const PriceLabel = styled.span`\n    ${labelWidthStyle}\n`;\n\nexport const RemoveButton = styled.span`\n    width:8%;\n    padding-left: 12px;\n    cursor: pointer;\n`;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {clearItem, addItem, removeItem} from '../../Redux/cart/cart.actions';\n\nimport {CheckoutItemContainer, ImageContainer, NameLable,\nQuantityLabel, PriceLabel, RemoveButton} from './checkout-item.styles';\n\nconst CheckoutItem = ({cartItem, clearItem, addItem, removeItem})=>{\n\n    const {name, imageUrl, price, quantity} = cartItem;\n    return (\n\n        <CheckoutItemContainer>\n            <ImageContainer>\n                <img src={`${imageUrl}`} alt='item' />\n            </ImageContainer>\n            <NameLable>{name}</NameLable>\n            <QuantityLabel>\n                <div className='arrow' onClick={()=>removeItem(cartItem)}>&#10094;</div>\n                <span className='value'>{quantity}</span>\n                <div className='arrow' onClick={()=>addItem(cartItem)}>&#10095;</div>\n            </QuantityLabel>\n            <PriceLabel>{price}</PriceLabel>\n            <RemoveButton\n            onClick={()=>clearItem(cartItem)}>&#10005;</RemoveButton>\n        </CheckoutItemContainer>\n    );\n}\n\nconst mapDispatchToProps = (dispatch)=>({\n    clearItem:(item)=>dispatch(clearItem(item)),\n    addItem:(item)=>dispatch(addItem(item)),\n    removeItem:(item)=>dispatch(removeItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutItem);","import styled from 'styled-components';\nimport StripeCheckout from 'react-stripe-checkout';\n\nexport const CheckoutButton = styled(StripeCheckout)`\n    margin-left: auto;\n    margin-top: 20px;\n    margin-bottom: 30px;\n    \n`;","import React from 'react';\n// import StripeCheckout from 'react-stripe-checkout';\nimport {CheckoutButton} from './stripe-checkout-button.styles';\nimport axios from 'axios';\n\nconst StripeCheckoutButton = ({price})=>{\n    const stripePrice = price * 100;\n    const publishableKey = 'pk_test_JT71xc1nGelbL46R1IlqxJik00UmOnFEvN';\n\n    const onToken = token=>{\n        axios({\n            url: 'payment',\n            method: 'post',\n            data: {\n                amount: stripePrice,\n                token: token\n            }\n        })\n        .then(res=>{\n            alert('Payment successful');\n        })\n        .catch(error=>{\n            console.log('Payment error: '+JSON.parse.error);\n            alert('There is an issue with your payment');\n        })\n    }\n\n    return (\n        <CheckoutButton\n            label='Pay Now'\n            name='E-Clothing'\n            billingAddress\n            shippingAddress\n            image='https://sendeyo.com/up/d/f3eb2117da'\n            description={`Your total is ${price}`}\n            amount={stripePrice}\n            panelLabel='Pay Now'\n            token={onToken}\n            stripeKey={publishableKey}\n        />\n    );\n}\n\nexport default StripeCheckoutButton;","import styled from 'styled-components';\n// import StripeCheckoutButton from '../../Components/stripe-checkout-button/stripe-checkout-button.component';\n\nexport const CheckoutConatiner = styled.div`\n    width: 55%;\n    min-height: 90vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 50px auto 0;\n`;\n\nexport const CheckoutHeader = styled.div`\n    width: 100%;\n    padding: 10px 0;\n    display: flex;\n    justify-content: space-between;\n    border-bottom: 1px solid darkgrey;\n    font-size: 20px;\n`;\n\nexport const HeaderBlock = styled.div`\n    text-transform: capitalize;\n    width: 23%;\n\n    &:last-child {\n        width: 8%;\n    }\n`;\n\nexport const Total = styled.div`\n    margin-top: 30px;\n    margin-left: auto;\n    font-size: 36px;\n`;\n\nexport const Warning = styled.div`\n    font-size: 30px;\n    text-align: center;\n    margin-top: 40px;\n    margin-bottom: 40px;\n    color: red;\n`;\n\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {SelectCartItems, SelectCartTotal} from '../../Redux/cart/cart.selector';\nimport CheckoutItem from '../../Components/checkout-item/checkout-item.component';\n import StripeCheckoutButton from '../../Components/stripe-checkout-button/stripe-checkout-button.component';\n\nimport {CheckoutConatiner, CheckoutHeader, \n    HeaderBlock, Total, Warning} from './checkoutpage.styles';\n\nconst CheckoutPage = ({cartItems, total})=>{\n\n    return (\n        <CheckoutConatiner>\n            <CheckoutHeader>\n                <HeaderBlock>\n                    <span>Product</span>\n                </HeaderBlock>\n                <HeaderBlock>\n                    <span>Description</span>\n                </HeaderBlock>\n                <HeaderBlock>\n                    <span>Quantity</span>\n                </HeaderBlock>\n                <HeaderBlock>\n                    <span>Price</span>\n                </HeaderBlock>\n                <HeaderBlock>\n                    <span>Remove</span>\n                </HeaderBlock>\n            </CheckoutHeader>\n            {\n                cartItems.map(item=>(<CheckoutItem key={item.id} cartItem={item} />))\n            }\n            <Total>{`Total Price:${total}`}</Total>\n            <Warning>\n                *Please use following credit card for payment*\n                <br />\n                4242 4242 4242 4242 - Exp:01/20 - CW:123\n            </Warning>\n            <StripeCheckoutButton price={total} />\n        </CheckoutConatiner>\n    );\n}\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems:SelectCartItems,\n    total:SelectCartTotal\n})\n\nexport default connect(mapStateToProps)(CheckoutPage);"],"sourceRoot":""}