{"ast":null,"code":"import _defineProperty from \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Components/sign-up/sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useState } from 'react';\nimport { Auth, CreateUserProfile } from '../../firebase/firebase.utils';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { SignUpContainer, Title } from './sign-up.styles';\nimport { SignupStart } from '../../Redux/user/user.actions';\n\nconst Signup = ({\n  singupStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('password not match');\n      return;\n    }\n\n    singupStart({\n      displayName,\n      email,\n      password\n    }); // try {\n    //     const {user} = await Auth.createUserWithEmailAndPassword(email, password);\n    //     await CreateUserProfile(user, {displayName});\n    //     setUserCredentials({\n    //         displayName:'',\n    //         email:'',\n    //         password:'',\n    //         confirmPassword:''\n    //     });\n    // } catch (error) {\n    //     console.log('sign up fail '+error);\n    // }\n  };\n\n  const handleChange = evt => {\n    evt.preventDefault();\n    const _evt$target = evt.target,\n          value = _evt$target.value,\n          name = _evt$target.name;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Title, {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, 'I do not have account'), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, 'Sign up with your email and password'), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    handleChange: handleChange,\n    label: \"name\",\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    handleChange: handleChange,\n    label: \"email\",\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    handleChange: handleChange,\n    label: \"password\",\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    handleChange: handleChange,\n    label: \"confirm password\",\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Sign up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  singupStart: userData => dispatch(SignupStart(userData))\n});\n\nexport default Signup;","map":{"version":3,"sources":["/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Components/sign-up/sign-up.component.jsx"],"names":["React","Component","useState","Auth","CreateUserProfile","FormInput","CustomButton","SignUpContainer","Title","SignupStart","Signup","singupStart","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","evt","preventDefault","alert","handleChange","target","value","name","mapDispatchToProps","dispatch","userData"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,IAAR,EAAcC,iBAAd,QAAsC,+BAAtC;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAAQC,eAAR,EAAyBC,KAAzB,QAAqC,kBAArC;AACA,SAAQC,WAAR,QAA0B,+BAA1B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAAA,oBAEiBT,QAAQ,CAAC;AAClDU,IAAAA,WAAW,EAAC,EADsC;AAElDC,IAAAA,KAAK,EAAC,EAF4C;AAGlDC,IAAAA,QAAQ,EAAC,EAHyC;AAIlDC,IAAAA,eAAe,EAAC;AAJkC,GAAD,CAFzB;AAAA;AAAA,QAEtBC,eAFsB;AAAA,QAELC,kBAFK;;AAAA,QASrBL,WATqB,GAS4BI,eAT5B,CASrBJ,WATqB;AAAA,QASRC,KATQ,GAS4BG,eAT5B,CASRH,KATQ;AAAA,QASDC,QATC,GAS4BE,eAT5B,CASDF,QATC;AAAA,QASSC,eATT,GAS4BC,eAT5B,CASSD,eATT;;AAU5B,QAAMG,YAAY,GAAG,MAAOC,GAAP,IAAa;AAE9BA,IAAAA,GAAG,CAACC,cAAJ;;AAEA,QAAGN,QAAQ,KAAKC,eAAhB,EAAgC;AAE5BM,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACA;AACH;;AAEDV,IAAAA,WAAW,CAAC;AAACC,MAAAA,WAAD;AAAcC,MAAAA,KAAd;AAAqBC,MAAAA;AAArB,KAAD,CAAX,CAV8B,CAY9B;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEH,GA5BD;;AA8BD,QAAMQ,YAAY,GAAIH,GAAD,IAAO;AAEvBA,IAAAA,GAAG,CAACC,cAAJ;AAFuB,wBAIAD,GAAG,CAACI,MAJJ;AAAA,UAIhBC,KAJgB,eAIhBA,KAJgB;AAAA,UAIRC,IAJQ,eAIRA,IAJQ;AAMvBR,IAAAA,kBAAkB,mBACXD,eADW;AAEd,OAACS,IAAD,GAAQD;AAFM,OAAlB;AAIH,GAVF;;AAYC,SAEI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0B,uBAA1B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,sCAAP,CAFJ,EAGI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEN,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,YAAY,EAAEI,YADlB;AAEI,IAAA,KAAK,EAAC,MAFV;AAGI,IAAA,IAAI,EAAC,MAHT;AAGgB,IAAA,IAAI,EAAC,aAHrB;AAGmC,IAAA,KAAK,EAAEV,WAH1C;AAGuD,IAAA,QAAQ,MAH/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,oBAAC,SAAD;AACI,IAAA,YAAY,EAAEU,YADlB;AAEI,IAAA,KAAK,EAAC,OAFV;AAGI,IAAA,IAAI,EAAC,OAHT;AAGiB,IAAA,IAAI,EAAC,OAHtB;AAG8B,IAAA,KAAK,EAAET,KAHrC;AAG4C,IAAA,QAAQ,MAHpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAaI,oBAAC,SAAD;AACI,IAAA,YAAY,EAAES,YADlB;AAEI,IAAA,KAAK,EAAC,UAFV;AAGI,IAAA,IAAI,EAAC,UAHT;AAGoB,IAAA,IAAI,EAAC,UAHzB;AAGoC,IAAA,KAAK,EAAER,QAH3C;AAGqD,IAAA,QAAQ,MAH7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAmBI,oBAAC,SAAD;AACI,IAAA,YAAY,EAAEQ,YADlB;AAEI,IAAA,KAAK,EAAC,kBAFV;AAGI,IAAA,IAAI,EAAC,UAHT;AAGoB,IAAA,IAAI,EAAC,iBAHzB;AAG2C,IAAA,KAAK,EAAEP,eAHlD;AAGmE,IAAA,QAAQ,MAH3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,EAyBI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAzBJ,CAHJ,CAFJ;AAkCH,CAtFD;;AAwFA,MAAMW,kBAAkB,GAAIC,QAAD,KAAa;AACpChB,EAAAA,WAAW,EAAEiB,QAAD,IAAYD,QAAQ,CAAClB,WAAW,CAACmB,QAAD,CAAZ;AADI,CAAb,CAA3B;;AAIA,eAAelB,MAAf","sourcesContent":["import React,{Component, useState} from 'react';\nimport {Auth, CreateUserProfile} from '../../firebase/firebase.utils';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {SignUpContainer, Title} from './sign-up.styles';\nimport {SignupStart} from '../../Redux/user/user.actions';\n\nconst Signup = ({singupStart})=>{\n\n    const[userCredentials, setUserCredentials] = useState({\n        displayName:'',\n        email:'',\n        password:'',\n        confirmPassword:''\n    });\n\n    const {displayName, email, password, confirmPassword} = userCredentials;\n    const handleSubmit = async (evt)=>{\n\n        evt.preventDefault();\n\n        if(password !== confirmPassword){\n\n            alert('password not match');\n            return;\n        }\n\n        singupStart({displayName, email, password});\n        \n        // try {\n\n        //     const {user} = await Auth.createUserWithEmailAndPassword(email, password);\n        //     await CreateUserProfile(user, {displayName});\n            \n        //     setUserCredentials({\n        //         displayName:'',\n        //         email:'',\n        //         password:'',\n        //         confirmPassword:''\n        //     });\n            \n        // } catch (error) {\n        //     console.log('sign up fail '+error);\n        // }\n\n    }\n\n   const handleChange = (evt)=>{\n\n        evt.preventDefault();\n\n        const {value , name} = evt.target;\n\n        setUserCredentials({\n            ...userCredentials,\n            [name]: value\n        });\n    }\n\n    return (\n\n        <SignUpContainer>\n            <Title className='title'>{'I do not have account'}</Title>\n            <span>{'Sign up with your email and password'}</span>\n            <form className='sign-up-form' onSubmit={handleSubmit}>\n                <FormInput \n                    handleChange={handleChange}\n                    label='name' \n                    type='text' name='displayName' value={displayName} required\n                />\n\n                <FormInput \n                    handleChange={handleChange}\n                    label='email' \n                    type='email' name='email' value={email} required\n                />\n\n                <FormInput \n                    handleChange={handleChange}\n                    label='password' \n                    type='password' name='password' value={password} required\n                />\n\n                <FormInput \n                    handleChange={handleChange}\n                    label='confirm password' \n                    type='password' name='confirmPassword' value={confirmPassword} required\n                />\n\n                <CustomButton type='submit'>Sign up</CustomButton>\n            </form>\n        </SignUpContainer>\n    );\n}\n\nconst mapDispatchToProps = (dispatch)=>({\n    singupStart:(userData)=>dispatch(SignupStart(userData))\n});\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}