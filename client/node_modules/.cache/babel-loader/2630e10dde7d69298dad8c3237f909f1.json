{"ast":null,"code":"var _jsxFileName = \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { CardDropdownContainer, CardItemsContainer, CardEmptyContainer, Button } from './card-dropdown.styles';\nimport { connect } from 'react-redux';\nimport CartItem from '../cart-item/cart-item.component';\nimport { SelectCartItems } from '../../Redux/cart/cart.selector.js';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport { toggleCartHidden } from '../../Redux/cart/cart.actions.js';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => {\n  return React.createElement(CardDropdownContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(CardItemsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, cartItems.length > 0 ? cartItems.map(item => React.createElement(CartItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })) : React.createElement(CardEmptyContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, 'Cart is empty')), React.createElement(CustomButton, {\n    onClick: () => {\n      history.push('/checkout');\n      dispatch(toggleCartHidden());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, 'Check out'));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: SelectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","CustomButton","CardDropdownContainer","CardItemsContainer","CardEmptyContainer","Button","connect","CartItem","SelectCartItems","createStructuredSelector","withRouter","toggleCartHidden","CartDropdown","cartItems","history","dispatch","length","map","item","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAAQC,qBAAR,EAA+BC,kBAA/B,EAAmDC,kBAAnD,EAAuEC,MAAvE,QAAoF,wBAApF;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAAQC,eAAR,QAA8B,mCAA9B;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,gBAAR,QAA+B,kCAA/B;;AAIA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,KAAkC;AAEnD,SACI,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQF,SAAS,CAACG,MAAV,GAAmB,CAAnB,GACAH,SAAS,CAACI,GAAV,CAAcC,IAAI,IAAE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,IAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,CADA,GAGA,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqB,eAArB,CALR,CADJ,EASI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAI;AACvBJ,MAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,MAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,WAHJ,CATJ,CADJ;AAgBH,CAlBD;;AAoBA,MAAMU,eAAe,GAAGZ,wBAAwB,CAAC;AAC7CI,EAAAA,SAAS,EAACL;AADmC,CAAD,CAAhD;AAIA,eAAeE,UAAU,CAACJ,OAAO,CAACe,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {CardDropdownContainer, CardItemsContainer, CardEmptyContainer, Button} from './card-dropdown.styles';\nimport {connect} from 'react-redux';\nimport CartItem from '../cart-item/cart-item.component';\nimport {SelectCartItems} from '../../Redux/cart/cart.selector.js';\nimport {createStructuredSelector} from 'reselect';\nimport {withRouter} from 'react-router-dom';\nimport {toggleCartHidden} from '../../Redux/cart/cart.actions.js';\n\n\n\nconst CartDropdown = ({cartItems, history, dispatch})=>{\n\n    return (\n        <CardDropdownContainer>\n            <CardItemsContainer>\n                {\n                    cartItems.length > 0?\n                    cartItems.map(item=><CartItem key={item.id} item={item} />)\n                    :\n                    <CardEmptyContainer>{'Cart is empty'}</CardEmptyContainer>\n                }\n            </CardItemsContainer>\n            <CustomButton onClick={()=>{\n                history.push('/checkout');\n                dispatch(toggleCartHidden());\n            }}>{'Check out'}</CustomButton>\n        </CardDropdownContainer>\n    );\n}\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems:SelectCartItems\n})\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}