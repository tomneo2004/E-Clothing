{"ast":null,"code":"var _jsxFileName = \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Pages/ShopPage/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport CollectionOverview from '../../Components/collection-overview/collection-overview.component';\nimport CollectionPage from '../CollectionPage/collectionpage.component';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../Redux/shop/shop.actions';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching, isCollectionLoading, selectIsCollectionLoading } from '../../Redux/shop/shop.selector';\nimport WithSpinner from '../../Components/with-spinner/with-spinner.component';\nconst SpinnerCollectionOverview = WithSpinner(CollectionOverview);\nconst SpinnerCollectionPage = WithSpinner(CollectionPage);\n\nclass Shop extends Component {\n  componentDidMount() {\n    const fetchCollectionsAsync = this.props.fetchCollectionsAsync;\n    fetchCollectionsAsync();\n  }\n\n  render() {\n    const match = this.props.match;\n    const _this$props = this.props,\n          isCollectionFetching = _this$props.isCollectionFetching,\n          isCollectionLoading = _this$props.isCollectionLoading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(SpinnerCollectionOverview, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(SpinnerCollectionPage, Object.assign({\n        isLoading: !isCollectionLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoading: selectIsCollectionLoading\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Pages/ShopPage/shop.component.jsx"],"names":["React","Component","CollectionOverview","CollectionPage","Route","connect","fetchCollectionsStartAsync","createStructuredSelector","selectIsCollectionFetching","isCollectionLoading","selectIsCollectionLoading","WithSpinner","SpinnerCollectionOverview","SpinnerCollectionPage","Shop","componentDidMount","fetchCollectionsAsync","props","render","match","isCollectionFetching","path","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,0BAAR,EAAoCC,mBAApC,EAAyDC,yBAAzD,QAAyF,gCAAzF;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,yBAAyB,GAAGD,WAAW,CAACT,kBAAD,CAA7C;AACA,MAAMW,qBAAqB,GAAGF,WAAW,CAACR,cAAD,CAAzC;;AAEA,MAAMW,IAAN,SAAmBb,SAAnB,CAA4B;AAExBc,EAAAA,iBAAiB,GAAE;AAAA,UAERC,qBAFQ,GAEiB,KAAKC,KAFtB,CAERD,qBAFQ;AAIfA,IAAAA,qBAAqB;AACxB;;AAEDE,EAAAA,MAAM,GAAE;AAAA,UAEGC,KAFH,GAEY,KAAKF,KAFjB,CAEGE,KAFH;AAAA,wBAGgD,KAAKF,KAHrD;AAAA,UAGGG,oBAHH,eAGGA,oBAHH;AAAA,UAGyBX,mBAHzB,eAGyBA,mBAHzB;AAKJ,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKU,KAAK,CAACE,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAGJ,KAAD,IAAU,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEG;AAAtC,SAAgEH,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKE,KAAK,CAACE,IAAX,mBAAjB;AAAkD,MAAA,MAAM,EAAGJ,KAAD,IAAU,oBAAC,qBAAD;AAAuB,QAAA,SAAS,EAAE,CAACR;AAAnC,SAA4DQ,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ;AAOH;;AArBuB;;AAwB5B,MAAMK,kBAAkB,GAAIC,QAAD,KAAa;AACpCP,EAAAA,qBAAqB,EAAC,MAAIO,QAAQ,CAACjB,0BAA0B,EAA3B;AADE,CAAb,CAA3B;;AAIA,MAAMkB,eAAe,GAAGjB,wBAAwB,CAAC;AAC7Ca,EAAAA,oBAAoB,EAACZ,0BADwB;AAE7CC,EAAAA,mBAAmB,EAACC;AAFyB,CAAD,CAAhD;AAKA,eAAeL,OAAO,CAACmB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CR,IAA7C,CAAf","sourcesContent":["import React,{Component} from 'react';\nimport CollectionOverview from '../../Components/collection-overview/collection-overview.component';\nimport CollectionPage from '../CollectionPage/collectionpage.component';\nimport {Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {fetchCollectionsStartAsync} from '../../Redux/shop/shop.actions';\nimport {createStructuredSelector} from 'reselect';\nimport {selectIsCollectionFetching, isCollectionLoading, selectIsCollectionLoading} from '../../Redux/shop/shop.selector';\nimport WithSpinner from '../../Components/with-spinner/with-spinner.component';\n\nconst SpinnerCollectionOverview = WithSpinner(CollectionOverview);\nconst SpinnerCollectionPage = WithSpinner(CollectionPage);\n\nclass Shop extends Component{\n\n    componentDidMount(){\n\n        const {fetchCollectionsAsync} = this.props;\n\n        fetchCollectionsAsync();\n    }\n\n    render(){\n\n        const {match} = this.props;\n        const {isCollectionFetching, isCollectionLoading} = this.props\n        \n        return (\n\n            <div>\n                <Route exact path={`${match.path}`} render={(props)=>(<SpinnerCollectionOverview isLoading={isCollectionFetching} {...props} />)} />\n                <Route exact path={`${match.path}/:collectionId`} render={(props)=>(<SpinnerCollectionPage isLoading={!isCollectionLoading} {...props} />)} />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>({\n    fetchCollectionsAsync:()=>dispatch(fetchCollectionsStartAsync())\n});\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching:selectIsCollectionFetching,\n    isCollectionLoading:selectIsCollectionLoading\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);"]},"metadata":{},"sourceType":"module"}