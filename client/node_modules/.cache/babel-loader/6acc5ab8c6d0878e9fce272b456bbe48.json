{"ast":null,"code":"var _jsxFileName = \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Pages/ShopPage/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport CollectionOverview from '../../Components/collection-overview/collection-overview.component';\nimport CollectionPage from '../CollectionPage/collectionpage.component';\nimport { Route } from 'react-router-dom';\nimport { Firestore, TransformCollectionsToMap } from '../../firebase/firebase.utils.js';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../Redux/shop/shop.actions';\n\nclass Shop extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = Firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const transformedCollections = TransformCollectionsToMap(snapshot);\n      updateCollections(transformedCollections);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromSnapshot();\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Pages/ShopPage/shop.component.jsx"],"names":["React","Component","CollectionOverview","CollectionPage","Route","Firestore","TransformCollectionsToMap","connect","updateCollections","Shop","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","transformedCollections","componentWillUnmount","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,SAAR,EAAmBC,yBAAnB,QAAmD,kCAAnD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;;AAEA,MAAMC,IAAN,SAAmBR,SAAnB,CAA4B;AAAA;AAAA;AAAA,SAExBS,uBAFwB,GAEE,IAFF;AAAA;;AAIxBC,EAAAA,iBAAiB,GAAE;AAAA,UAERH,iBAFQ,GAEa,KAAKI,KAFlB,CAERJ,iBAFQ;AAIf,UAAMK,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAkB;AAEtE,YAAMC,sBAAsB,GAAGX,yBAAyB,CAACU,QAAD,CAAxD;AAEAR,MAAAA,iBAAiB,CAACS,sBAAD,CAAjB;AACH,KAL8B,CAA/B;AAOH;;AAEDC,EAAAA,oBAAoB,GAAE;AAElB,SAAKR,uBAAL;AACH;;AAEDS,EAAAA,MAAM,GAAE;AAAA,UAEGC,KAFH,GAEY,KAAKR,KAFjB,CAEGQ,KAFH;AAGJ,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEnB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKkB,KAAK,CAACC,IAAX,mBAAjB;AAAkD,MAAA,SAAS,EAAElB,cAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ;AAOH;;AAlCuB;;AAqC5B,MAAMmB,kBAAkB,GAAIC,QAAD,KAAa;AACpCf,EAAAA,iBAAiB,EAAEgB,cAAD,IAAkBD,QAAQ,CAACf,iBAAiB,CAACgB,cAAD,CAAlB;AADR,CAAb,CAA3B;;AAIA,eAAejB,OAAO,CAAC,IAAD,EAAOe,kBAAP,CAAP,CAAkCb,IAAlC,CAAf","sourcesContent":["import React,{Component} from 'react';\nimport CollectionOverview from '../../Components/collection-overview/collection-overview.component';\nimport CollectionPage from '../CollectionPage/collectionpage.component';\nimport {Route} from 'react-router-dom';\nimport {Firestore, TransformCollectionsToMap} from '../../firebase/firebase.utils.js';\nimport {connect} from 'react-redux';\nimport {updateCollections} from '../../Redux/shop/shop.actions';\n\nclass Shop extends Component{\n    \n    unsubscribeFromSnapshot = null;\n\n    componentDidMount(){\n\n        const {updateCollections} = this.props;\n\n        const collectionRef = Firestore.collection('collections');\n\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async (snapshot)=>{\n\n            const transformedCollections = TransformCollectionsToMap(snapshot);\n\n            updateCollections(transformedCollections);\n        });\n        \n    }\n\n    componentWillUnmount(){\n\n        this.unsubscribeFromSnapshot();\n    }\n\n    render(){\n\n        const {match} = this.props;\n        return (\n\n            <div>\n                <Route exact path={`${match.path}`} component={CollectionOverview} />\n                <Route exact path={`${match.path}/:collectionId`} component={CollectionPage} />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>({\n    updateCollections:(collectionsMap)=>dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);"]},"metadata":{},"sourceType":"module"}