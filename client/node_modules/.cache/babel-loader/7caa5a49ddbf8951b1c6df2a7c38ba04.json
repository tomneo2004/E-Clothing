{"ast":null,"code":"import _defineProperty from \"/Volumes/BOOTCAMP/ReactProjects/e-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, all, call, put } from 'redux-saga/effects';\nimport UserActionTypes from './user.action.type';\nimport { Auth, googleProvider, CreateUserProfile, getCurrentUser } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFail, SignOutSuccess, SignOutFail, SignupSuccess, SignupFail, CheckUserSession } from './user.actions';\n\nfunction* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(CreateUserProfile, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(SignInFail(error));\n  }\n}\n\nexport function* signinWithGoogle() {\n  try {\n    const _ref = yield Auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFail(error));\n  }\n}\nexport function* googleSigninStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signinWithGoogle);\n}\nexport function* signinWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield Auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFail(error));\n  }\n}\nexport function* emailSigninStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signinWithEmail);\n}\nexport function* onCheckUserSession() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFail(console.error));\n  }\n}\nexport function* checkUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, onCheckUserSession);\n}\nexport function* onSignout() {\n  try {\n    yield Auth.signOut();\n    yield put(SignOutSuccess());\n  } catch (error) {\n    yield put(SignOutFail(error));\n  }\n}\nexport function* userSignoutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, onSignout);\n}\nexport function* signup({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref3 = yield Auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(SignupSuccess({\n      user,\n      additionalData: displayName\n    }));\n  } catch (error) {\n    yield put(SignupFail(error));\n  }\n}\nexport function* userSignupStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signup);\n}\nexport function* signupSuccess({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* userSignupSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signupSuccess);\n}\nexport function* userSaga() {\n  yield all([call(googleSigninStart), call(emailSigninStart), call(checkUserSession), call(userSignoutStart), call(userSignupStart), call(userSignupSuccess)]);\n}","map":{"version":3,"sources":["/Volumes/BOOTCAMP/ReactProjects/e-clothing/src/Redux/user/user.saga.js"],"names":["takeLatest","all","call","put","UserActionTypes","Auth","googleProvider","CreateUserProfile","getCurrentUser","SignInSuccess","SignInFail","SignOutSuccess","SignOutFail","SignupSuccess","SignupFail","CheckUserSession","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signinWithGoogle","signInWithPopup","user","googleSigninStart","GOOGLE_SIGN_IN_START","signinWithEmail","payload","email","password","signInWithEmailAndPassword","emailSigninStart","EMAIL_SIGN_IN_START","onCheckUserSession","console","checkUserSession","CHECK_USER_SESSION","onSignout","signOut","userSignoutStart","SIGN_OUT_START","signup","displayName","createUserWithEmailAndPassword","userSignupStart","SIGN_UP_START","signupSuccess","userSignupSuccess","SIGN_UP_SUCCESS","userSaga"],"mappings":"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","sourcesContent":["import {takeLatest, all, call, put} from 'redux-saga/effects';\nimport UserActionTypes from './user.action.type';\nimport {Auth, googleProvider, CreateUserProfile, getCurrentUser} from '../../firebase/firebase.utils';\nimport {SignInSuccess, SignInFail,\nSignOutSuccess, SignOutFail,\nSignupSuccess, SignupFail,\nCheckUserSession} from './user.actions';\n\nfunction* getSnapshotFromUserAuth(userAuth, additionalData){\n\n    try{\n        const userRef = yield call(CreateUserProfile, userAuth, additionalData);\n        const userSnapshot = yield userRef.get();\n\n        yield put(SignInSuccess({\n            id:userSnapshot.id,\n             ...userSnapshot.data()\n        }));\n    }\n    catch(error){\n        yield put(SignInFail(error));\n    }\n}\n\nexport function* signinWithGoogle(){\n\n    try{\n        const {user} = yield Auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    }\n    catch(error){\n        yield put(SignInFail(error));\n    }\n    \n}\n\nexport function* googleSigninStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,\n         signinWithGoogle);\n}\n\nexport function* signinWithEmail({payload:{email, password}}){\n    \n    try{\n        const {user} = yield Auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n    }\n    catch(error){\n        yield put(SignInFail(error));\n    }\n}\n\nexport function* emailSigninStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,\n         signinWithEmail);\n}\n\nexport function* onCheckUserSession(){\n    \n    try{\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    }\n    catch(error){\n        yield put(SignInFail(console.error));\n    }\n}\n\nexport function* checkUserSession(){\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, onCheckUserSession);\n}\n\nexport function* onSignout(){\n    \n    try {\n        yield Auth.signOut();\n        yield put(SignOutSuccess());\n\n    } catch (error) {\n        yield put(SignOutFail(error));\n    }\n}\n\nexport function* userSignoutStart(){\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, onSignout);\n}\n\nexport function* signup({payload:{displayName, email, password}}){\n    \n    try {\n\n        const {user} = yield Auth.createUserWithEmailAndPassword(email, password);\n        yield put(SignupSuccess({user, additionalData:displayName}));\n        \n    } catch (error) {\n        yield put(SignupFail(error));\n    }\n}\nexport function* userSignupStart(){\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signup);\n}\n\nexport function* signupSuccess({payload:{user, additionalData}}){\n\n    yield getSnapshotFromUserAuth(user, additionalData);\n}\n\nexport function* userSignupSuccess(){\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signupSuccess);\n}\n\nexport function* userSaga(){\n    yield all([\n        call(googleSigninStart), \n        call(emailSigninStart), \n        call(checkUserSession),\n        call(userSignoutStart),\n        call(userSignupStart),\n        call(userSignupSuccess)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}